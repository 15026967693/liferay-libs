package com.jiayang.portlet.commons;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.Date;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.yaml.snakeyaml.Yaml;



public class Config {
	public static Logger cofigLogger=LoggerFactory.getLogger(Config.class);
	public static Map<String,Object> config;
	static {
		Yaml yaml=new Yaml();
		String configFilePath=null;
		Reader configReader=null;
		Reader defaultConfigReader=null;
		try {
			configFilePath=new File(Config.class.getClassLoader().getResource("").getFile())
					.getParentFile().getCanonicalPath()+"/extend.yaml";
			if(new File(configFilePath).exists())
				configReader=new FileReader(configFilePath);
			
				defaultConfigReader=new InputStreamReader(Config.class.getClassLoader().getResourceAsStream("extend.yaml"));
			config=yaml.load(configReader);
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			cofigLogger.error("{}:{}",new Date(),e);
		}
		finally {
			try {
				if(configReader!=null)
					configReader.close();
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				cofigLogger.error("{}:{}",new Date(),e);
			} 
			try {
				if(defaultConfigReader!=null)
					defaultConfigReader.close();
			}
			catch (IOException e) {
				// TODO: handle exception
				e.printStackTrace();
				cofigLogger.error("{}:{}",new Date(),e);
			}
		}
          
	}

}
