package com.util.config;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.Date;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.yaml.snakeyaml.Yaml;



public class MergedConfig {
	public static Logger cofigLogger=LoggerFactory.getLogger(MergedConfig.class);
	public static Map<String,Object> config;
	
	public MergedConfig(String configPath) {
		
		Yaml yaml=new Yaml();
		String configFilePath=null;
		Reader configReader=null;
		Reader defaultConfigReader=null;
		Map<String,Object> defaultConfig=null;
		try {
			defaultConfigReader=new InputStreamReader(MergedConfig.class.getClassLoader().getResourceAsStream(configPath));
			defaultConfig=yaml.load(defaultConfigReader);
			configFilePath=new File(MergedConfig.class.getClassLoader().getResource("").getFile())
					.getParentFile().getCanonicalPath()+"/"+configPath;
			if(new File(configFilePath).exists()) {
				configReader=new FileReader(configFilePath);
			    config=yaml.load(configReader);
			    for(String key:defaultConfig.keySet())
			    {
			    	if(!config.containsKey(key))
			    		config.put(key, defaultConfig.get(key));
			    }
			    
			    }
			else {
				config=defaultConfig;
			}
				
				
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			cofigLogger.error("{}:{}",new Date(),e);
		}
		finally {
			try {
				if(configReader!=null)
					configReader.close();
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				cofigLogger.error("{}:{}",new Date(),e);
			} 
			try {
				if(defaultConfigReader!=null)
					defaultConfigReader.close();
			}
			catch (IOException e) {
				// TODO: handle exception
				e.printStackTrace();
				cofigLogger.error("{}:{}",new Date(),e);
			}
		}
          
		
		
	}
	
	static {
		
	}

}

